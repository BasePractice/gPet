//edition = "2023";

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0
// source: middleware/class.proto

package class

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClassStatus int32

const (
	ClassStatus_CLASS_NONE      ClassStatus = 0
	ClassStatus_CLASS_DRAFT     ClassStatus = 1
	ClassStatus_CLASS_PUBLISHED ClassStatus = 2
	ClassStatus_CLASS_ARCHIVED  ClassStatus = 3
)

// Enum value maps for ClassStatus.
var (
	ClassStatus_name = map[int32]string{
		0: "CLASS_NONE",
		1: "CLASS_DRAFT",
		2: "CLASS_PUBLISHED",
		3: "CLASS_ARCHIVED",
	}
	ClassStatus_value = map[string]int32{
		"CLASS_NONE":      0,
		"CLASS_DRAFT":     1,
		"CLASS_PUBLISHED": 2,
		"CLASS_ARCHIVED":  3,
	}
)

func (x ClassStatus) Enum() *ClassStatus {
	p := new(ClassStatus)
	*p = x
	return p
}

func (x ClassStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClassStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_middleware_class_proto_enumTypes[0].Descriptor()
}

func (ClassStatus) Type() protoreflect.EnumType {
	return &file_middleware_class_proto_enumTypes[0]
}

func (x ClassStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClassStatus.Descriptor instead.
func (ClassStatus) EnumDescriptor() ([]byte, []int) {
	return file_middleware_class_proto_rawDescGZIP(), []int{0}
}

type ClassElementStatus int32

const (
	ClassElementStatus_ITEM_NONE      ClassElementStatus = 0
	ClassElementStatus_ITEM_DRAFT     ClassElementStatus = 1
	ClassElementStatus_ITEM_PUBLISHED ClassElementStatus = 2
	ClassElementStatus_ITEM_SKIP      ClassElementStatus = 3
)

// Enum value maps for ClassElementStatus.
var (
	ClassElementStatus_name = map[int32]string{
		0: "ITEM_NONE",
		1: "ITEM_DRAFT",
		2: "ITEM_PUBLISHED",
		3: "ITEM_SKIP",
	}
	ClassElementStatus_value = map[string]int32{
		"ITEM_NONE":      0,
		"ITEM_DRAFT":     1,
		"ITEM_PUBLISHED": 2,
		"ITEM_SKIP":      3,
	}
)

func (x ClassElementStatus) Enum() *ClassElementStatus {
	p := new(ClassElementStatus)
	*p = x
	return p
}

func (x ClassElementStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClassElementStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_middleware_class_proto_enumTypes[1].Descriptor()
}

func (ClassElementStatus) Type() protoreflect.EnumType {
	return &file_middleware_class_proto_enumTypes[1]
}

func (x ClassElementStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClassElementStatus.Descriptor instead.
func (ClassElementStatus) EnumDescriptor() ([]byte, []int) {
	return file_middleware_class_proto_rawDescGZIP(), []int{1}
}

type Class struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Status        ClassStatus            `protobuf:"varint,3,opt,name=status,proto3,enum=class.ClassStatus" json:"status,omitempty"`
	Version       uint32                 `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Class) Reset() {
	*x = Class{}
	mi := &file_middleware_class_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Class) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Class) ProtoMessage() {}

func (x *Class) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_class_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Class.ProtoReflect.Descriptor instead.
func (*Class) Descriptor() ([]byte, []int) {
	return file_middleware_class_proto_rawDescGZIP(), []int{0}
}

func (x *Class) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Class) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Class) GetStatus() ClassStatus {
	if x != nil {
		return x.Status
	}
	return ClassStatus_CLASS_NONE
}

func (x *Class) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type ClassRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NameFilter    *string                `protobuf:"bytes,1,opt,name=name_filter,json=nameFilter,proto3,oneof" json:"name_filter,omitempty"`
	Status        *ClassStatus           `protobuf:"varint,2,opt,name=status,proto3,enum=class.ClassStatus,oneof" json:"status,omitempty"`
	Version       *uint32                `protobuf:"varint,3,opt,name=version,proto3,oneof" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClassRequest) Reset() {
	*x = ClassRequest{}
	mi := &file_middleware_class_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassRequest) ProtoMessage() {}

func (x *ClassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_class_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassRequest.ProtoReflect.Descriptor instead.
func (*ClassRequest) Descriptor() ([]byte, []int) {
	return file_middleware_class_proto_rawDescGZIP(), []int{1}
}

func (x *ClassRequest) GetNameFilter() string {
	if x != nil && x.NameFilter != nil {
		return *x.NameFilter
	}
	return ""
}

func (x *ClassRequest) GetStatus() ClassStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ClassStatus_CLASS_NONE
}

func (x *ClassRequest) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type ClassReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Classes       []*Class               `protobuf:"bytes,1,rep,name=classes,proto3" json:"classes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClassReply) Reset() {
	*x = ClassReply{}
	mi := &file_middleware_class_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClassReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassReply) ProtoMessage() {}

func (x *ClassReply) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_class_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassReply.ProtoReflect.Descriptor instead.
func (*ClassReply) Descriptor() ([]byte, []int) {
	return file_middleware_class_proto_rawDescGZIP(), []int{2}
}

func (x *ClassReply) GetClasses() []*Class {
	if x != nil {
		return x.Classes
	}
	return nil
}

type ClassElement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Version       uint32                 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Status        ClassElementStatus     `protobuf:"varint,4,opt,name=status,proto3,enum=class.ClassElementStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClassElement) Reset() {
	*x = ClassElement{}
	mi := &file_middleware_class_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClassElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassElement) ProtoMessage() {}

func (x *ClassElement) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_class_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassElement.ProtoReflect.Descriptor instead.
func (*ClassElement) Descriptor() ([]byte, []int) {
	return file_middleware_class_proto_rawDescGZIP(), []int{3}
}

func (x *ClassElement) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ClassElement) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ClassElement) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ClassElement) GetStatus() ClassElementStatus {
	if x != nil {
		return x.Status
	}
	return ClassElementStatus_ITEM_NONE
}

type ClassElementRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version       *uint32                `protobuf:"varint,2,opt,name=version,proto3,oneof" json:"version,omitempty"`
	Status        *ClassElementStatus    `protobuf:"varint,3,opt,name=status,proto3,enum=class.ClassElementStatus,oneof" json:"status,omitempty"`
	Offset        *uint32                `protobuf:"varint,4,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	Limit         *uint32                `protobuf:"varint,5,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClassElementRequest) Reset() {
	*x = ClassElementRequest{}
	mi := &file_middleware_class_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClassElementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassElementRequest) ProtoMessage() {}

func (x *ClassElementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_class_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassElementRequest.ProtoReflect.Descriptor instead.
func (*ClassElementRequest) Descriptor() ([]byte, []int) {
	return file_middleware_class_proto_rawDescGZIP(), []int{4}
}

func (x *ClassElementRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClassElementRequest) GetVersion() uint32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *ClassElementRequest) GetStatus() ClassElementStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ClassElementStatus_ITEM_NONE
}

func (x *ClassElementRequest) GetOffset() uint32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *ClassElementRequest) GetLimit() uint32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type ClassElementReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Elements      []*ClassElement        `protobuf:"bytes,2,rep,name=elements,proto3" json:"elements,omitempty"`
	NextOffset    uint32                 `protobuf:"varint,3,opt,name=next_offset,json=nextOffset,proto3" json:"next_offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClassElementReply) Reset() {
	*x = ClassElementReply{}
	mi := &file_middleware_class_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClassElementReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassElementReply) ProtoMessage() {}

func (x *ClassElementReply) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_class_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassElementReply.ProtoReflect.Descriptor instead.
func (*ClassElementReply) Descriptor() ([]byte, []int) {
	return file_middleware_class_proto_rawDescGZIP(), []int{5}
}

func (x *ClassElementReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClassElementReply) GetElements() []*ClassElement {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *ClassElementReply) GetNextOffset() uint32 {
	if x != nil {
		return x.NextOffset
	}
	return 0
}

var File_middleware_class_proto protoreflect.FileDescriptor

var file_middleware_class_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2f, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22,
	0x77, 0x0a, 0x05, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xab, 0x01, 0x0a, 0x0c, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x12, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x48, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x02, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x0a, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x22, 0x83, 0x01, 0x0a,
	0x0c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xe4, 0x01, 0x0a, 0x13, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x00, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x79, 0x0a, 0x11, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x2a, 0x57, 0x0a, 0x0b, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x44, 0x52, 0x41,
	0x46, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x50, 0x55,
	0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4c, 0x41,
	0x53, 0x53, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x56, 0x0a,
	0x12, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x44, 0x52, 0x41, 0x46, 0x54,
	0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49,
	0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x54, 0x45, 0x4d, 0x5f, 0x53,
	0x4b, 0x49, 0x50, 0x10, 0x03, 0x32, 0x7e, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x31, 0x0a, 0x07, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x12, 0x13, 0x2e, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x11, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x40, 0x0a, 0x08, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x1a, 0x2e, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x12, 0x5a, 0x10, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77,
	0x61, 0x72, 0x65, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_middleware_class_proto_rawDescOnce sync.Once
	file_middleware_class_proto_rawDescData []byte
)

func file_middleware_class_proto_rawDescGZIP() []byte {
	file_middleware_class_proto_rawDescOnce.Do(func() {
		file_middleware_class_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_middleware_class_proto_rawDesc), len(file_middleware_class_proto_rawDesc)))
	})
	return file_middleware_class_proto_rawDescData
}

var file_middleware_class_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_middleware_class_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_middleware_class_proto_goTypes = []any{
	(ClassStatus)(0),            // 0: class.ClassStatus
	(ClassElementStatus)(0),     // 1: class.ClassElementStatus
	(*Class)(nil),               // 2: class.Class
	(*ClassRequest)(nil),        // 3: class.ClassRequest
	(*ClassReply)(nil),          // 4: class.ClassReply
	(*ClassElement)(nil),        // 5: class.ClassElement
	(*ClassElementRequest)(nil), // 6: class.ClassElementRequest
	(*ClassElementReply)(nil),   // 7: class.ClassElementReply
}
var file_middleware_class_proto_depIdxs = []int32{
	0, // 0: class.Class.status:type_name -> class.ClassStatus
	0, // 1: class.ClassRequest.status:type_name -> class.ClassStatus
	2, // 2: class.ClassReply.classes:type_name -> class.Class
	1, // 3: class.ClassElement.status:type_name -> class.ClassElementStatus
	1, // 4: class.ClassElementRequest.status:type_name -> class.ClassElementStatus
	5, // 5: class.ClassElementReply.elements:type_name -> class.ClassElement
	3, // 6: class.Service.Classes:input_type -> class.ClassRequest
	6, // 7: class.Service.Elements:input_type -> class.ClassElementRequest
	4, // 8: class.Service.Classes:output_type -> class.ClassReply
	7, // 9: class.Service.Elements:output_type -> class.ClassElementReply
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_middleware_class_proto_init() }
func file_middleware_class_proto_init() {
	if File_middleware_class_proto != nil {
		return
	}
	file_middleware_class_proto_msgTypes[1].OneofWrappers = []any{}
	file_middleware_class_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_middleware_class_proto_rawDesc), len(file_middleware_class_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_middleware_class_proto_goTypes,
		DependencyIndexes: file_middleware_class_proto_depIdxs,
		EnumInfos:         file_middleware_class_proto_enumTypes,
		MessageInfos:      file_middleware_class_proto_msgTypes,
	}.Build()
	File_middleware_class_proto = out.File
	file_middleware_class_proto_goTypes = nil
	file_middleware_class_proto_depIdxs = nil
}
