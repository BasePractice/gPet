//edition = "2023";
syntax = "proto3";

option go_package = "middleware/hasq";

package hasq;

message TokenCreate {
  string title = 1;
  bytes  data = 2;
}

message TokenReply {
  string token_id = 1;
  string title = 2;
  string hash = 3;
  optional bytes data = 4;
}

message TokenSearch {
  oneof search {
    string token_id = 1;
    string token_hash = 2;
  }
}

message KeyCreate {
  string user_id = 1;
  string token_id = 2;
  string passphrase = 3;
}

message KeyCreateReply {
  string key_id = 1;
  string hash = 2;
}

message OwnerCreate {
  string user_id = 1;
  string token_id = 2;
}

message OwnerCreateReply {
  bool successful = 1;
}

message ChainValidate {
  string token_id = 1;
}

message ChainValidateReply {
  bool successful = 1;
  string owner_id = 2;
  uint64 last_num = 3;
}

service Service {
  rpc CreateToken(TokenCreate) returns (TokenReply);
  rpc SearchToken(TokenSearch) returns (TokenReply);
  rpc CreateKey(KeyCreate) returns (KeyCreateReply);
  rpc Owned(OwnerCreate) returns (OwnerCreateReply);
  rpc Validate(ChainValidate) returns (ChainValidateReply);
}