//edition = "2023";

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0
// source: middleware/hasq.proto

package hasq

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TokenCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenCreate) Reset() {
	*x = TokenCreate{}
	mi := &file_middleware_hasq_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenCreate) ProtoMessage() {}

func (x *TokenCreate) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_hasq_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenCreate.ProtoReflect.Descriptor instead.
func (*TokenCreate) Descriptor() ([]byte, []int) {
	return file_middleware_hasq_proto_rawDescGZIP(), []int{0}
}

func (x *TokenCreate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TokenCreate) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type TokenReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TokenId       string                 `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Hash          string                 `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Data          []byte                 `protobuf:"bytes,4,opt,name=data,proto3,oneof" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenReply) Reset() {
	*x = TokenReply{}
	mi := &file_middleware_hasq_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenReply) ProtoMessage() {}

func (x *TokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_hasq_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenReply.ProtoReflect.Descriptor instead.
func (*TokenReply) Descriptor() ([]byte, []int) {
	return file_middleware_hasq_proto_rawDescGZIP(), []int{1}
}

func (x *TokenReply) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *TokenReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TokenReply) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *TokenReply) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type TokenSearch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Search:
	//
	//	*TokenSearch_TokenId
	//	*TokenSearch_TokenHash
	Search        isTokenSearch_Search `protobuf_oneof:"search"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenSearch) Reset() {
	*x = TokenSearch{}
	mi := &file_middleware_hasq_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenSearch) ProtoMessage() {}

func (x *TokenSearch) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_hasq_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenSearch.ProtoReflect.Descriptor instead.
func (*TokenSearch) Descriptor() ([]byte, []int) {
	return file_middleware_hasq_proto_rawDescGZIP(), []int{2}
}

func (x *TokenSearch) GetSearch() isTokenSearch_Search {
	if x != nil {
		return x.Search
	}
	return nil
}

func (x *TokenSearch) GetTokenId() string {
	if x != nil {
		if x, ok := x.Search.(*TokenSearch_TokenId); ok {
			return x.TokenId
		}
	}
	return ""
}

func (x *TokenSearch) GetTokenHash() string {
	if x != nil {
		if x, ok := x.Search.(*TokenSearch_TokenHash); ok {
			return x.TokenHash
		}
	}
	return ""
}

type isTokenSearch_Search interface {
	isTokenSearch_Search()
}

type TokenSearch_TokenId struct {
	TokenId string `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3,oneof"`
}

type TokenSearch_TokenHash struct {
	TokenHash string `protobuf:"bytes,2,opt,name=token_hash,json=tokenHash,proto3,oneof"`
}

func (*TokenSearch_TokenId) isTokenSearch_Search() {}

func (*TokenSearch_TokenHash) isTokenSearch_Search() {}

type KeyCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TokenId       string                 `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Passphrase    string                 `protobuf:"bytes,3,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyCreate) Reset() {
	*x = KeyCreate{}
	mi := &file_middleware_hasq_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyCreate) ProtoMessage() {}

func (x *KeyCreate) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_hasq_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyCreate.ProtoReflect.Descriptor instead.
func (*KeyCreate) Descriptor() ([]byte, []int) {
	return file_middleware_hasq_proto_rawDescGZIP(), []int{3}
}

func (x *KeyCreate) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *KeyCreate) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *KeyCreate) GetPassphrase() string {
	if x != nil {
		return x.Passphrase
	}
	return ""
}

type KeyCreateReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KeyId         string                 `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	Hash          string                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyCreateReply) Reset() {
	*x = KeyCreateReply{}
	mi := &file_middleware_hasq_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyCreateReply) ProtoMessage() {}

func (x *KeyCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_hasq_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyCreateReply.ProtoReflect.Descriptor instead.
func (*KeyCreateReply) Descriptor() ([]byte, []int) {
	return file_middleware_hasq_proto_rawDescGZIP(), []int{4}
}

func (x *KeyCreateReply) GetKeyId() string {
	if x != nil {
		return x.KeyId
	}
	return ""
}

func (x *KeyCreateReply) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type OwnerCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TokenId       string                 `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OwnerCreate) Reset() {
	*x = OwnerCreate{}
	mi := &file_middleware_hasq_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OwnerCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerCreate) ProtoMessage() {}

func (x *OwnerCreate) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_hasq_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerCreate.ProtoReflect.Descriptor instead.
func (*OwnerCreate) Descriptor() ([]byte, []int) {
	return file_middleware_hasq_proto_rawDescGZIP(), []int{5}
}

func (x *OwnerCreate) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OwnerCreate) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type OwnerCreateReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Successful    bool                   `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OwnerCreateReply) Reset() {
	*x = OwnerCreateReply{}
	mi := &file_middleware_hasq_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OwnerCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OwnerCreateReply) ProtoMessage() {}

func (x *OwnerCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_hasq_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OwnerCreateReply.ProtoReflect.Descriptor instead.
func (*OwnerCreateReply) Descriptor() ([]byte, []int) {
	return file_middleware_hasq_proto_rawDescGZIP(), []int{6}
}

func (x *OwnerCreateReply) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

type ChainValidate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TokenId       string                 `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChainValidate) Reset() {
	*x = ChainValidate{}
	mi := &file_middleware_hasq_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChainValidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainValidate) ProtoMessage() {}

func (x *ChainValidate) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_hasq_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainValidate.ProtoReflect.Descriptor instead.
func (*ChainValidate) Descriptor() ([]byte, []int) {
	return file_middleware_hasq_proto_rawDescGZIP(), []int{7}
}

func (x *ChainValidate) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type ChainValidateReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Successful    bool                   `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	OwnerId       string                 `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	LastNum       uint64                 `protobuf:"varint,3,opt,name=last_num,json=lastNum,proto3" json:"last_num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChainValidateReply) Reset() {
	*x = ChainValidateReply{}
	mi := &file_middleware_hasq_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChainValidateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainValidateReply) ProtoMessage() {}

func (x *ChainValidateReply) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_hasq_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainValidateReply.ProtoReflect.Descriptor instead.
func (*ChainValidateReply) Descriptor() ([]byte, []int) {
	return file_middleware_hasq_proto_rawDescGZIP(), []int{8}
}

func (x *ChainValidateReply) GetSuccessful() bool {
	if x != nil {
		return x.Successful
	}
	return false
}

func (x *ChainValidateReply) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *ChainValidateReply) GetLastNum() uint64 {
	if x != nil {
		return x.LastNum
	}
	return 0
}

var File_middleware_hasq_proto protoreflect.FileDescriptor

var file_middleware_hasq_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x77, 0x61, 0x72, 0x65, 0x2f, 0x68, 0x61, 0x73,
	0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x68, 0x61, 0x73, 0x71, 0x22, 0x37, 0x0a,
	0x0b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x73, 0x0a, 0x0a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x17, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x55, 0x0a, 0x0b, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x08, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x22, 0x5f, 0x0a, 0x09, 0x4b, 0x65, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72, 0x61, 0x73,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x73, 0x73, 0x70, 0x68, 0x72,
	0x61, 0x73, 0x65, 0x22, 0x3b, 0x0a, 0x0e, 0x4b, 0x65, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x22, 0x41, 0x0a, 0x0b, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x10, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x22, 0x2a, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x12, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x32,
	0x94, 0x02, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x11, 0x2e, 0x68, 0x61, 0x73,
	0x71, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x1a, 0x10, 0x2e,
	0x68, 0x61, 0x73, 0x71, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x32, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x11,
	0x2e, 0x68, 0x61, 0x73, 0x71, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x1a, 0x10, 0x2e, 0x68, 0x61, 0x73, 0x71, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x0f, 0x2e, 0x68, 0x61, 0x73, 0x71, 0x2e, 0x4b, 0x65, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x1a, 0x14, 0x2e, 0x68, 0x61, 0x73, 0x71, 0x2e, 0x4b, 0x65, 0x79, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x64,
	0x12, 0x11, 0x2e, 0x68, 0x61, 0x73, 0x71, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x1a, 0x16, 0x2e, 0x68, 0x61, 0x73, 0x71, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x08, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x68, 0x61, 0x73, 0x71, 0x2e, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x18, 0x2e, 0x68,
	0x61, 0x73, 0x71, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x11, 0x5a, 0x0f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x77, 0x61, 0x72, 0x65, 0x2f, 0x68, 0x61, 0x73, 0x71, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_middleware_hasq_proto_rawDescOnce sync.Once
	file_middleware_hasq_proto_rawDescData []byte
)

func file_middleware_hasq_proto_rawDescGZIP() []byte {
	file_middleware_hasq_proto_rawDescOnce.Do(func() {
		file_middleware_hasq_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_middleware_hasq_proto_rawDesc), len(file_middleware_hasq_proto_rawDesc)))
	})
	return file_middleware_hasq_proto_rawDescData
}

var file_middleware_hasq_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_middleware_hasq_proto_goTypes = []any{
	(*TokenCreate)(nil),        // 0: hasq.TokenCreate
	(*TokenReply)(nil),         // 1: hasq.TokenReply
	(*TokenSearch)(nil),        // 2: hasq.TokenSearch
	(*KeyCreate)(nil),          // 3: hasq.KeyCreate
	(*KeyCreateReply)(nil),     // 4: hasq.KeyCreateReply
	(*OwnerCreate)(nil),        // 5: hasq.OwnerCreate
	(*OwnerCreateReply)(nil),   // 6: hasq.OwnerCreateReply
	(*ChainValidate)(nil),      // 7: hasq.ChainValidate
	(*ChainValidateReply)(nil), // 8: hasq.ChainValidateReply
}
var file_middleware_hasq_proto_depIdxs = []int32{
	0, // 0: hasq.Service.CreateToken:input_type -> hasq.TokenCreate
	2, // 1: hasq.Service.SearchToken:input_type -> hasq.TokenSearch
	3, // 2: hasq.Service.CreateKey:input_type -> hasq.KeyCreate
	5, // 3: hasq.Service.Owned:input_type -> hasq.OwnerCreate
	7, // 4: hasq.Service.Validate:input_type -> hasq.ChainValidate
	1, // 5: hasq.Service.CreateToken:output_type -> hasq.TokenReply
	1, // 6: hasq.Service.SearchToken:output_type -> hasq.TokenReply
	4, // 7: hasq.Service.CreateKey:output_type -> hasq.KeyCreateReply
	6, // 8: hasq.Service.Owned:output_type -> hasq.OwnerCreateReply
	8, // 9: hasq.Service.Validate:output_type -> hasq.ChainValidateReply
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_middleware_hasq_proto_init() }
func file_middleware_hasq_proto_init() {
	if File_middleware_hasq_proto != nil {
		return
	}
	file_middleware_hasq_proto_msgTypes[1].OneofWrappers = []any{}
	file_middleware_hasq_proto_msgTypes[2].OneofWrappers = []any{
		(*TokenSearch_TokenId)(nil),
		(*TokenSearch_TokenHash)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_middleware_hasq_proto_rawDesc), len(file_middleware_hasq_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_middleware_hasq_proto_goTypes,
		DependencyIndexes: file_middleware_hasq_proto_depIdxs,
		MessageInfos:      file_middleware_hasq_proto_msgTypes,
	}.Build()
	File_middleware_hasq_proto = out.File
	file_middleware_hasq_proto_goTypes = nil
	file_middleware_hasq_proto_depIdxs = nil
}
